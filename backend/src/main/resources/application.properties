# Server Configuration
server.port=8080
server.servlet.context-path=/api

# Database Configuration
spring.datasource.url=jdbc:mysql://localhost:3306/bloomkart
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:sourav}
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.format_sql=true

# JWT Configuration
jwt.secret=bloomkartSecretKey2024FlowerEcommerceApplication
jwt.expiration=86400000
jwt.refresh-expiration=604800000

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=50MB
file.upload.path=uploads/

# Email Configuration
spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=${MAIL_USERNAME:your-email@gmail.com}
spring.mail.password=${MAIL_PASSWORD:your-app-password}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# CORS Configuration
cors.allowed-origins=http://localhost:5173,http://localhost:5174,http://localhost:5175,http://localhost:5176,http://localhost:5177,http://localhost:5178,http://localhost:5179,http://localhost:5180,http://localhost:3000
cors.allowed-methods=GET,POST,PUT,DELETE,OPTIONS
cors.allowed-headers=*

# Razorpay Configuration
razorpay.key.id=${RAZORPAY_KEY_ID:rzp_test_your_key_id}
razorpay.key.secret=${RAZORPAY_KEY_SECRET:your_razorpay_secret_key}

# Logging Configuration
logging.level.com.bloomkart=DEBUG
logging.level.org.springframework.security=DEBUG

# Actuator Configuration
management.endpoints.web.exposure.include=health,info,metrics 

# Serve static files from the uploads directory
spring.web.resources.static-locations=classpath:/uploads/ 
# OAuth2 Configuration
spring.security.oauth2.client.registration.google.client-id=274055186243-lmcdi7tt0bi4kauk9pa78088edim3vrd.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/api/oauth2/callback/{registrationId}
spring.security.oauth2.client.registration.google.scope=email,profile
spring.security.oauth2.client.registration.google.client-name=Google
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/v2/auth
spring.security.oauth2.client.provider.google.token-uri=https://www.googleapis.com/oauth2/v4/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.jwk-set-uri=https://www.googleapis.com/oauth2/v3/certs
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# Frontend URLs
app.oauth2.authorized-redirect-uris=http://localhost:5173/oauth2/redirect
