version: "3.8"

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: bloomkart-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword
      MYSQL_DATABASE: bloomkart
      MYSQL_USER: bloomkart
      MYSQL_PASSWORD: bloomkart123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./backend/src/main/resources/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    networks:
      - bloomkart-network

  # Redis for Caching
  redis:
    image: redis:7-alpine
    container_name: bloomkart-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - bloomkart-network

  # Backend Application
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bloomkart-backend
    restart: unless-stopped
    environment:
      - SPRING_PROFILES_ACTIVE=docker
      - SPRING_DATASOURCE_URL=jdbc:mysql://mysql:3306/bloomkart
      - SPRING_DATASOURCE_USERNAME=bloomkart
      - SPRING_DATASOURCE_PASSWORD=bloomkart123
      - SPRING_REDIS_HOST=redis
      - SPRING_REDIS_PORT=6379
      - JWT_SECRET=bloomkartSecretKey2024FlowerEcommerceApplication
      - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
      - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
    ports:
      - "8080:8080"
    depends_on:
      - mysql
      - redis
    volumes:
      - uploads_data:/app/uploads
    networks:
      - bloomkart-network

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bloomkart-frontend
    restart: unless-stopped
    environment:
      - VITE_API_BASE_URL=http://localhost:8080/api
      - VITE_GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
    ports:
      - "5173:80"
    depends_on:
      - backend
    networks:
      - bloomkart-network

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: bloomkart-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
    depends_on:
      - frontend
      - backend
    networks:
      - bloomkart-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  uploads_data:
    driver: local

networks:
  bloomkart-network:
    driver: bridge
